--
-- ROM with asynchronous read (listing 11.5)
-- 
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
entity Rom is
   port(
      addb: in std_logic_vector(7 downto 0);
      datab: out std_logic_vector(7 downto 0)
   );
end Rom;

architecture Amygdala of Rom is
   constant ABW: integer:=8;
   constant DBW: integer:=8;
   type rom_type is array (0 to 2**ABW-1)
        of std_logic_vector(DBW-1 downto 0);
   constant content: rom_type:=(  -- 2^8-by-8
      "10100000",  -- addr 00 contains LD R,M code (A0H)
      "00000000",  -- just data (55H)
      "10110000",  -- addr 02: INCR (B0H)
      "10110000",  -- addr 03: INCR (B0H)
      "11000000",  -- addr 04: DECR (C0H)
      "11000000",  -- addr 04: DECR (C0H)  
      "11010000",  -- JRNZ 
      "00001110",  -- addr Jump to 14
      "00000000",  -- addr 
      "00000000",  -- addr 
      "00000000",  -- addr 
      "11111111",  -- addr ..: HALT (FFH)
      "00000000",  -- addr 
      "00000000",  -- addr
      "11110001",  -- Setting Speed   
      "10000000",  -- Ludicrous Speed chosen
      "11100010",  -- Move Forward
      "00000001",  -- For 10 tenth of a second (cycles in SIM)
      "11100001",  -- Pen Down
      "11110000",  -- Rotate Left
      "00000001",  -- For 5 tenth of a second (cycles in SIM)
      "11100100",  -- Move Back
      "00000001",  -- For 10 tenth of a second (cycles in SIM)
      "11110001",  -- Setting Speed   
      "01000000",  -- Medium Speed chosen
      "11101000",  -- Forward Left
      "00000001",  -- For 10 tenth of a second (cycles in SIM)
      "11100000",  -- Pen Up
      "11101000",  -- Forward Left
      "00000001",  -- For 10 tenth of a second (cycles in SIM)
      "11111111",  -- HALT
      "11111111",  -- HALT
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr 
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr   
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr   
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr    
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr   
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr  
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000",  -- addr 
      "00000000","00000000","00000000","00000000","00000000","00000000","00000000","00000000"  -- addr  
   );
   
begin
   datab <= content(to_integer(unsigned(addb)));
end Amygdala;